// <auto-generated />
using CTFOh.SQLManagement.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CTFOh.Migrations
{
    [DbContext(typeof(CTFDBContext))]
    partial class CTFDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("CTFOh.SQLManagement.Data.CTFDetailsChalls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Files")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LinkedCTF")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Links")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Points")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CTFDetailsChalls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Actif = 1,
                            Desc = "Je Bouh",
                            Files = "{\"https://boubouh.txt/text.png\"}",
                            Img = "{\"null\"}",
                            LinkedCTF = 1,
                            Links = "{\"null\"}",
                            Name = "Bouh",
                            Points = 100L
                        },
                        new
                        {
                            Id = 2,
                            Actif = 1,
                            Desc = "Je Bouh",
                            Files = "{\"https://boubouh.txt/text.png\"}",
                            Img = "{\"https://boubouh.txt/text.png\"}",
                            LinkedCTF = 1,
                            Links = "{\"null\"}",
                            Name = "Bouhda",
                            Points = 240L
                        },
                        new
                        {
                            Id = 3,
                            Actif = 1,
                            Desc = "Je Bouh",
                            Files = "{\"https://boubouh.txt/text.png\"}",
                            Img = "{\"null\"}",
                            LinkedCTF = 1,
                            Links = "{\"null\"}",
                            Name = "Bouher",
                            Points = 10L
                        },
                        new
                        {
                            Id = 4,
                            Actif = 1,
                            Desc = "Je Bouh",
                            Files = "{\"https://boubouh.txt/text.png\"}",
                            Img = "{\"null\"}",
                            LinkedCTF = 1,
                            Links = "{\"https://boubouh.txt/text.png\"}",
                            Name = "Bouhas",
                            Points = 260L
                        },
                        new
                        {
                            Id = 5,
                            Actif = 1,
                            Desc = "Je Bouh",
                            Files = "{\"https://boubouh.txt/text.png\"}",
                            Img = "{\"null\"}",
                            LinkedCTF = 1,
                            Links = "{\"null\"}",
                            Name = "Bouhvi",
                            Points = 2000L
                        },
                        new
                        {
                            Id = 6,
                            Actif = 0,
                            Desc = "Je Bouh",
                            Files = "{\"https://boubouh.txt/text.png\"}",
                            Img = "{\"null\"}",
                            LinkedCTF = 1,
                            Links = "{\"null\"}",
                            Name = "Bouhtu",
                            Points = 30L
                        });
                });

            modelBuilder.Entity("CTFOh.SQLManagement.Data.CTFList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dend")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Dstart")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Select")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CTFList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dend = "29/05/2023 15:00:00",
                            Dstart = "29/05/2023 13:00:00",
                            Name = "CTFTest",
                            Select = 1
                        },
                        new
                        {
                            Id = 2,
                            Dend = "24/05/2023 15:00:00",
                            Dstart = "21/05/2023 13:00:00",
                            Name = "CTFToust",
                            Select = 0
                        });
                });

            modelBuilder.Entity("CTFOh.SQLManagement.Data.CTFListChalls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Chall")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LinkedCTF")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Order")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StrictOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CTFListChalls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Actif = 1,
                            Chall = "{1, 2, 4}",
                            LinkedCTF = 1,
                            Name = "Je Bouh",
                            Order = "{1, 2, 4}",
                            StrictOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            Actif = 1,
                            Chall = "{3}",
                            LinkedCTF = 1,
                            Name = "JeBoude",
                            Order = "{3}",
                            StrictOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            Actif = 1,
                            Chall = "{5}",
                            LinkedCTF = 1,
                            Name = "Bouhbouh",
                            Order = "{5}",
                            StrictOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            Actif = 0,
                            Chall = "{6}",
                            LinkedCTF = 1,
                            Name = "Pasla",
                            Order = "{6}",
                            StrictOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            Actif = 0,
                            Chall = "{6}",
                            LinkedCTF = 2,
                            Name = "Pasla",
                            Order = "{6}",
                            StrictOrder = 0
                        });
                });

            modelBuilder.Entity("CTFOh.SQLManagement.Data.CTFTeams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChkPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LinkedCTF")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NiceChalls")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CTFTeams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChkPassword = "068d23b4c3e5ba01291aef534de6e058",
                            LinkedCTF = 1,
                            Name = "BlueProject",
                            NiceChalls = "{1, 2, 4}"
                        },
                        new
                        {
                            Id = 2,
                            ChkPassword = "068d23b4c3e5ba01291aef534de6e058",
                            LinkedCTF = 1,
                            Name = "OteriHack",
                            NiceChalls = "{4, 2, 3}"
                        });
                });

            modelBuilder.Entity("CTFOh.SQLManagement.Data.CTFUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssignedChalls")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChkPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LinkedCTF")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Team")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CTFUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedChalls = "{1, 2, 4}",
                            ChkPassword = "068d23b4c3e5ba01291aef534de6e058",
                            LinkedCTF = 1,
                            Pseudo = "Rhenar",
                            Score = 2300L,
                            Team = 1
                        },
                        new
                        {
                            Id = 2,
                            AssignedChalls = "{1, 4, 5}",
                            ChkPassword = "068d23b4c3e5ba01291aef534de6e058",
                            LinkedCTF = 1,
                            Pseudo = "Hope",
                            Score = 2500L,
                            Team = 1
                        },
                        new
                        {
                            Id = 3,
                            AssignedChalls = "{1, 2, 3}",
                            ChkPassword = "068d23b4c3e5ba01291aef534de6e058",
                            LinkedCTF = 1,
                            Pseudo = "Segrard",
                            Score = 230L,
                            Team = 2
                        },
                        new
                        {
                            Id = 4,
                            AssignedChalls = "{1, 2, 3}",
                            ChkPassword = "068d23b4c3e5ba01291aef534de6e058",
                            LinkedCTF = 2,
                            Pseudo = "Segrard",
                            Score = 230L,
                            Team = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
